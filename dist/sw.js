"use strict";var staticCache="res-staticStuff-v24",contentImgsCache="res-contentImgStuff",allCaches=[staticCache,contentImgsCache];self.addEventListener("install",function(e){e.waitUntil(caches.open(staticCache).then(function(e){return e.addAll(["/","/restaurant.html","/manifest/manifest.json","css/styles.css","css/styles-min-w-750.css","css/styles-min-w-1200.css","css/styles.css","js/commons.js","js/restaurant_info.js","js/main.js","js/picturefill.min.js","js/intersection-observer.js"])}))}),self.addEventListener("activate",function(e){e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return e.startsWith("res-")&&!allCaches.includes(e)}).map(function(e){return caches.delete(e)}))}))}),self.addEventListener("fetch",function(t){var e=new URL(t.request.url);e.origin===location.origin&&e.pathname.startsWith("/img/")?t.respondWith(serveImages(t.request)):t.respondWith(caches.match(t.request).then(function(e){return e||fetch(t.request)}))});var serveImages=function(s){var n=s.url.replace(/-\d{3}.webp$/,"")+".webp";return caches.open(contentImgsCache).then(function(t){return t.match(n).then(function(e){return e||fetch(s).then(function(e){return t.put(n,e.clone()),e})})})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3LmpzIl0sIm5hbWVzIjpbInN0YXRpY0NhY2hlIiwiY29udGVudEltZ3NDYWNoZSIsImV2ZW50IiwiY2FjaGVzIiwid2FpdFVudGlsIiwib3BlbiIsInRoZW4iLCJjYWNoZSIsImFkZEFsbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtYXAiLCJzZWxmIiwib3JpZ2luIiwibG9jYXRpb24iLCJyZXF1ZXN0VXJsIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwicmVzcG9uZFdpdGgiLCJjYWNoZXNOYW1lcyIsImZpbHRlciIsImNhY2hlTmFtZSIsImFsbENhY2hlcyIsImluY2x1ZGVzIiwiZGVsZXRlIiwic2VydmVJbWFnZXMiLCJVUkwiLCJyZXF1ZXN0Iiwic3RvcmFnZVVybCIsInVybCIsInJlcGxhY2UiLCJtYXRjaCIsInJlc3BvbnNlIiwiZmV0Y2giLCJuZXR3b3JrUmVzcG9uc2UiLCJwdXQiLCJjbG9uZSJdLCJtYXBwaW5ncyI6ImFBQUEsSUFBQUEsWUFBQSxzQkFHTUMsaUJBQW1CLHNCQURuQkQsVUFBYyxDQUNwQkEsWUFDQUMsa0JBV0VDLEtBQUFBLGlCQUNFQyxVQUFZSCxTQUFaRSxHQWVDQSxFQWhCSEUsVUFGRkQsT0FBQUUsS0FBQUwsYUFBQU0sS0FBQSxTQUFBQyxHQUlNLE9BQU9BLEVBQU1DLE9BQU8sQ0FrQjFCLElBaEJRLG1CQUNBLDBCQWtCSEMsaUJBQ0dMLDJCQUVGLDRCQUVJLGlCQUNDTSxnQkFDRCx3QkFKSixhQUZKLHdCQURGLHFDQXNCRUMsS0FBQUYsaUJBQWVHLFdBQVdDLFNBQTFCWCxHQXJCQUEsRUFBTUUsVUF1QkpELE9BQUlXLE9BQUFBLEtBQVdDLFNBQVNDLEdBQ3RCZCxPQUFNZSxRQUFBQSxJQUNOQyxFQUFBQyxPQUFBLFNBQUFDLEdBQ0QsT0FBQUEsRUFBQUosV0FBQSxVQUFBSyxVQUFBQyxTQUFBRixLQUVGVixJQUFBLFNBQUFVLEdBdEJPLE9BQU9qQixPQUFPb0IsT0FBT0gsV0FXL0JULEtBQUtGLGlCQUFpQixRQUFTLFNBQVNQLEdBNEJ4QyxJQUFNc0IsRUFBYyxJQUFBQyxJQUFkRCxFQUFBQSxRQUFlRSxLQUVmQyxFQUFBQSxTQUFxQkMsU0FBSUMsUUFFN0JmLEVBQWNULFNBQUtKLFdBQWtCSyxTQUNuQ0osRUFBT0ssWUFBWW9CLFlBQVlyQixFQUFLb0IsVUFNckN4QixFQVBEZSxZQUpGZCxPQUFBMkIsTUFBQTVCLEVBQUF3QixTQUFBcEIsS0FBQSxTQUFBeUIsR0FiTSxPQUFPQSxHQUFZQyxNQUFNOUIsRUFBTXdCLGNBYXJDLElBQU1GLFlBQWMsU0FBQ0UsR0FFbkIsSUFBSUMsRUFBYUQsRUFBUUUsSUFBSUMsUUFBUSxlQUFnQixJQUFNLFFBRTNELE9BQU8xQixPQUFPRSxLQUFLSixrQkFBa0JLLEtBQUssU0FBU0MsR0FDakQsT0FBT0EsRUFBTXVCLE1BQU1ILEdBQVlyQixLQUFLLFNBQVN5QixHQUMzQyxPQUFPQSxHQUFZQyxNQUFNTixHQUFTcEIsS0FBSyxTQUFTMkIsR0FFOUMsT0FEQTFCLEVBQU0yQixJQUFJUCxFQUFZTSxFQUFnQkUsU0FDL0JGIiwiZmlsZSI6InN3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypqc2hpbnQgZXN2ZXJzaW9uOiA2ICovXHJcblxyXG5jb25zdCBzdGF0aWNDYWNoZSA9ICdyZXMtc3RhdGljU3R1ZmYtdjI0JztcclxuY29uc3QgY29udGVudEltZ3NDYWNoZSA9ICdyZXMtY29udGVudEltZ1N0dWZmJztcclxuY29uc3QgYWxsQ2FjaGVzID0gW1xyXG4gIHN0YXRpY0NhY2hlLFxyXG4gIGNvbnRlbnRJbWdzQ2FjaGVcclxuXTtcclxuXHJcblxyXG4vKipcclxuICogTGlzdGVuIHRvIHRoZSBpbnN0YWxsIGV2ZW50IGFuZCBjYWNoZSBzdGF0aWMgaXRlbXNcclxuICovXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignaW5zdGFsbCcsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblxyXG4gIGV2ZW50LndhaXRVbnRpbChcclxuICAgIGNhY2hlcy5vcGVuKHN0YXRpY0NhY2hlKS50aGVuKGZ1bmN0aW9uKGNhY2hlKSB7XHJcbiAgICAgIHJldHVybiBjYWNoZS5hZGRBbGwoW1xyXG4gICAgICAgICcvJyxcclxuICAgICAgICAnL3Jlc3RhdXJhbnQuaHRtbCcsXHJcbiAgICAgICAgJy9tYW5pZmVzdC9tYW5pZmVzdC5qc29uJyxcclxuICAgICAgICAnY3NzL3N0eWxlcy5jc3MnLFxyXG4gICAgICAgICdjc3Mvc3R5bGVzLW1pbi13LTc1MC5jc3MnLFxyXG4gICAgICAgICdjc3Mvc3R5bGVzLW1pbi13LTEyMDAuY3NzJyxcclxuICAgICAgICAnY3NzL3N0eWxlcy5jc3MnLFxyXG4gICAgICAgICdqcy9jb21tb25zLmpzJyxcclxuICAgICAgICAnanMvcmVzdGF1cmFudF9pbmZvLmpzJyxcclxuICAgICAgICAnanMvbWFpbi5qcycsXHJcbiAgICAgICAgJ2pzL3BpY3R1cmVmaWxsLm1pbi5qcycsXHJcbiAgICAgICAgJ2pzL2ludGVyc2VjdGlvbi1vYnNlcnZlci5qcydcclxuICAgICAgXSk7XHJcbiAgICB9KVxyXG4gICk7XHJcbn0pO1xyXG5cclxuLyoqXHJcbiAqIExpc3RlbiB0byB0aGUgYWN0aXZhdGUgZXZlbnQgYW5kIGRlbGV0ZSBvbGRlciBjYWNoZSB2ZXJzaW9uc1xyXG4gKi9cclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdhY3RpdmF0ZScsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgZXZlbnQud2FpdFVudGlsKFxyXG4gICAgY2FjaGVzLmtleXMoKS50aGVuKGZ1bmN0aW9uKGNhY2hlc05hbWVzKSB7XHJcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChcclxuICAgICAgICBjYWNoZXNOYW1lcy5maWx0ZXIoZnVuY3Rpb24oY2FjaGVOYW1lKSB7XHJcbiAgICAgICAgICByZXR1cm4gY2FjaGVOYW1lLnN0YXJ0c1dpdGgoJ3Jlcy0nKSAmJiAhYWxsQ2FjaGVzLmluY2x1ZGVzKGNhY2hlTmFtZSk7XHJcbiAgICAgICAgfSkubWFwKGZ1bmN0aW9uKGNhY2hlTmFtZSkge1xyXG4gICAgICAgICAgcmV0dXJuIGNhY2hlcy5kZWxldGUoY2FjaGVOYW1lKTtcclxuICAgICAgICB9KVxyXG4gICAgICApO1xyXG4gICAgfSlcclxuICApO1xyXG59KTtcclxuXHJcblxyXG4vKipcclxuICogTGlzdGVuIHRvIHRoZSBmZXRjaCBldmVudCBhbmQgdHJ5IHRvIGdldCBpdGVtcyBmcm9tIHRoZSBjYWNoZSBpZiBwb3NzaWJsZVxyXG4gKi9cclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdmZXRjaCcsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblxyXG4gIGNvbnN0IHJlcXVlc3RVcmwgPSBuZXcgVVJMKGV2ZW50LnJlcXVlc3QudXJsKTtcclxuXHJcbiAgaWYgKHJlcXVlc3RVcmwub3JpZ2luID09PSBsb2NhdGlvbi5vcmlnaW4pIHtcclxuXHJcbiAgICBpZiAocmVxdWVzdFVybC5wYXRobmFtZS5zdGFydHNXaXRoKCcvaW1nLycpKSB7XHJcbiAgICAgIGV2ZW50LnJlc3BvbmRXaXRoKHNlcnZlSW1hZ2VzKGV2ZW50LnJlcXVlc3QpKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG4gIGV2ZW50LnJlc3BvbmRXaXRoKFxyXG4gICAgY2FjaGVzLm1hdGNoKGV2ZW50LnJlcXVlc3QpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgcmV0dXJuIHJlc3BvbnNlIHx8IGZldGNoKGV2ZW50LnJlcXVlc3QpO1xyXG4gICAgfSlcclxuICApO1xyXG59KTtcclxuXHJcblxyXG4vKipcclxuICogSGVscGVyIGZ1bmN0aW9uIHRvIHNlcnZlIGltYWdlc1xyXG4gKiBJbWFnZSB1cmxzIGxvb2sgbGlrZTpcclxuICogaW1nLzEtNTAwLmpwZ1xyXG4gKiBCdXQgc3RvcmFnZVVybCBoYXMgdGhlIC01MDAuanBnIGJpdCBtaXNzaW5nXHJcbiAqIFdlIHN0b3JlIG9uZSBjb3B5IG9mIGVhY2ggYXZhdGFyXHJcbiAqL1xyXG5jb25zdCBzZXJ2ZUltYWdlcyA9IChyZXF1ZXN0KSA9PiB7XHJcblxyXG4gIHZhciBzdG9yYWdlVXJsID0gcmVxdWVzdC51cmwucmVwbGFjZSgvLVxcZHszfS53ZWJwJC8sICcnKSArICcud2VicCc7XHJcblxyXG4gIHJldHVybiBjYWNoZXMub3Blbihjb250ZW50SW1nc0NhY2hlKS50aGVuKGZ1bmN0aW9uKGNhY2hlKSB7XHJcbiAgICByZXR1cm4gY2FjaGUubWF0Y2goc3RvcmFnZVVybCkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICByZXR1cm4gcmVzcG9uc2UgfHwgZmV0Y2gocmVxdWVzdCkudGhlbihmdW5jdGlvbihuZXR3b3JrUmVzcG9uc2UpIHtcclxuICAgICAgICBjYWNoZS5wdXQoc3RvcmFnZVVybCwgbmV0d29ya1Jlc3BvbnNlLmNsb25lKCkpO1xyXG4gICAgICAgIHJldHVybiBuZXR3b3JrUmVzcG9uc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn07XHJcbiJdfQ==
