"use strict";var _slicedToArray=function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,r){var t=[],n=!0,i=!1,a=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done)&&(t.push(o.value),!r||t.length!==r);n=!0);}catch(e){i=!0,a=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw a}}return t}(e,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_createClass=function(){function n(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,r,t){return r&&n(e.prototype,r),t&&n(e,t),e}}();function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var DBHelper=function(){function t(){_classCallCheck(this,t)}return _createClass(t,null,[{key:"fetchRestaurants",value:function(r){fetch(t.DATABASE_URL).then(function(e){return e.json()}).then(function(e){return r([!0,e])}).catch(function(e){return r([!1,e])})}},{key:"fetchRestaurantById",value:function(o,u){t.fetchRestaurants(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=_slicedToArray(e,2),t=r[0],n=void 0!==t&&t,i=r[1];if(n){var a=i.find(function(e){return e.id==o});a?u(n,a):u(null,"Restaurant does not exist")}else u(!n,i)})}},{key:"fetchRestaurantByCuisine",value:function(o,u){t.fetchRestaurants(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=_slicedToArray(e,2),t=r[0],n=void 0!==t&&t,i=r[1];if(n){var a=i.filter(function(e){return e.cuisine_type==o});u(n,a)}else u(!n,i)})}},{key:"fetchRestaurantByNeighborhood",value:function(o,u){t.fetchRestaurants(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=_slicedToArray(e,2),t=r[0],n=void 0!==t&&t,i=r[1];if(n){var a=i.filter(function(e){return e.neighborhood==o});u(n,a)}else u(!n,i)})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(o,u,c){t.fetchRestaurants(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=_slicedToArray(e,2),t=r[0],n=void 0!==t&&t,i=r[1];if(n){var a=i;"all"!=o&&(a=a.filter(function(e){return e.cuisine_type==o})),"all"!=u&&(a=a.filter(function(e){return e.neighborhood==u})),c(n,a)}else c(!n,i)})}},{key:"fetchNeighborhoods",value:function(u){t.fetchRestaurants(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=_slicedToArray(e,2),t=r[0],n=void 0!==t&&t,i=r[1];if(n){var a=i.map(function(e,r){return i[r].neighborhood}),o=a.filter(function(e,r){return a.indexOf(e)==r});u(n,o)}else u(!n,i)})}},{key:"fetchCuisines",value:function(u){t.fetchRestaurants(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=_slicedToArray(e,2),t=r[0],n=void 0!==t&&t,i=r[1];if(n){var a=i.map(function(e,r){return i[r].cuisine_type}),o=a.filter(function(e,r){return a.indexOf(e)==r});u(n,o)}else u(!n,i)})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e){return"/img/"+e.photograph+".jpg"}},{key:"imageNameForRestaurant",value:function(e){return e.photograph.replace(/\.jpg$/,"")}},{key:"mapMarkerForRestaurant",value:function(e,r){return new google.maps.Marker({position:e.latlng,title:e.name,url:t.urlForRestaurant(e),map:r,animation:google.maps.Animation.DROP})}},{key:"DATABASE_URL",get:function(){return"http://192.168.1.132:1337/restaurants"}}]),t}(),ServiceWorkerController=function(){function e(){_classCallCheck(this,e),this._registerServiceWorker()}return _createClass(e,[{key:"_registerServiceWorker",value:function(){navigator.serviceWorker&&navigator.serviceWorker.register("sw.js")}}]),e}();new ServiceWorkerController;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbnMuanMiXSwibmFtZXMiOlsiREJIZWxwZXIiLCJjYWxsYmFjayIsImZldGNoIiwiREFUQUJBU0VfVVJMIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwiaWQiLCJmZXRjaFJlc3RhdXJhbnRzIiwiX3JlZiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIl9yZWYyIiwiX3NsaWNlZFRvQXJyYXkiLCJfcmVmMiQiLCJvayIsInJlc3RhdXJhbnQiLCJmaW5kIiwiciIsImN1aXNpbmUiLCJfcmVmMyIsIl9yZWY0IiwiX3JlZjQkIiwicmVzdWx0cyIsImZpbHRlciIsImN1aXNpbmVfdHlwZSIsIm5laWdoYm9yaG9vZCIsIl9yZWY1IiwiX3JlZjYiLCJfcmVmNiQiLCJfcmVmNyIsIl9yZWY4IiwiX3JlZjgkIiwiX3JlZjkiLCJfcmVmMTAiLCJfcmVmMTAkIiwibmVpZ2hib3Job29kcyIsIm1hcCIsInYiLCJpIiwiaW5kZXhPZiIsInVuaXF1ZU5laWdoYm9yaG9vZHMiLCJfcmVmMTEiLCJfcmVmMTIiLCJfcmVmMTIkIiwiY3Vpc2luZXMiLCJ1bmlxdWVDdWlzaW5lcyIsInBob3RvZ3JhcGgiLCJnb29nbGUiLCJtYXBzIiwiTWFya2VyIiwicG9zaXRpb24iLCJsYXRsbmciLCJ0aXRsZSIsIm5hbWUiLCJ1cmwiLCJ1cmxGb3JSZXN0YXVyYW50IiwiYW5pbWF0aW9uIiwiQW5pbWF0aW9uIiwiRFJPUCIsIlNlcnZpY2VXb3JrZXJDb250cm9sbGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9yZWdpc3RlclNlcnZpY2VXb3JrZXIiLCJuYXZpZ2F0b3IiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiI0eEJBR01BLDRIQWNvQkMsR0FDdEJDLE1BQU1GLEVBQVNHLGNBQ1pDLEtBQUssU0FBQUMsR0FBQSxPQUFZQSxFQUFTQyxTQUwvQkYsS0FBQSxTQUFBRyxHQUFBLE9BQUFOLEVBQUEsRUFBQSxFQUFBTSxNQU9LQyxNQUFNLFNBQUFDLEdBQUEsT0FBU1IsRUFBUyxFQUFDLEVBQU9RLGtEQXNCVkMsRUFBSVQsR0FFN0JELEVBQVNXLGlCQUFpQixXQUFpQyxJQUFBQyxFQUFBLEVBQUFDLFVBQUFDLGFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUFQLEdBQU9HLEVBQUFDLGVBQUFMLEVBQUEsR0FBQU0sRUFBQUYsRUFBQSxHQUEvQkcsT0FBK0JKLElBQUFHLEdBQUFBLEVBQW5CYixFQUFtQlcsRUFBQSxHQUN6RCxHQUFLRyxFQUVFLENBUlgsSUFBQUMsRUFBQWYsRUFBQWdCLEtBQUEsU0FBQUMsR0FBQSxPQUFBQSxFQUFBWixJQUFBQSxJQVVVVSxFQUNGbkIsRUFBU2tCLEVBQUlDLEdBRWJuQixFQUFTLEtBQU0sa0NBZnRCQSxHQUFBa0IsRUFBQWQsc0RBTzREa0IsRUFBQXRCLEdBQ3pERCxFQUFLbUIsaUJBQUksV0FBQSxJQUFBSyxFQUFBLEVBQUFYLFVBQUFDLGFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUFBLEdBQUFZLEVBQUFSLGVBQUFPLEVBQUEsR0FBQUUsRUFBQUQsRUFBQSxHQUFBTixPQUFBSixJQUFBVyxHQUFBQSxFQUFBckIsRUFBQW9CLEVBQUEsR0FDUHhCLEdBQUFBLEVBRUEsQ0FBaUMsSUFBakMwQixFQUFBdEIsRUFBQXVCLE9BQUEsU0FBQU4sR0FBQSxPQUFBQSxFQUFBTyxjQUFBTixJQUNBdEIsRUFBSW1CLEVBQUFBLFFBRkxuQixHQUFNa0IsRUFBQWQsMkRBSFR5QixFQUFBN0IsR0FtQ0FELEVBQVNXLGlCQUFpQixXQUFpQyxJQUFBb0IsRUFBQSxFQUFBbEIsVUFBQUMsYUFBQUMsSUFBQUYsVUFBQSxHQUFBQSxVQUFBLEdBQVAsR0FBT21CLEVBQUFmLGVBQUFjLEVBQUEsR0FBQUUsRUFBQUQsRUFBQSxHQUEvQmIsT0FBK0JKLElBQUFrQixHQUFBQSxFQUFuQjVCLEVBQW1CMkIsRUFBQSxHQXJCN0QsR0FBQWIsRUF3QlcsQ0FFTCxJQUFNUSxFQUFVdEIsRUFBU3VCLE9BQU8sU0FBQU4sR0FBQSxPQUFLQSxFQUFFUSxjQUFnQkEsSUFDdkQ3QixFQUFTa0IsRUFBSVEsUUFKYjFCLEdBQVVrQixFQUFJZCxxRUFsQnlDa0IsRUFBQU8sRUFBQTdCLEdBQ3pERCxFQUFLbUIsaUJBQUksV0FBQSxJQUFBZSxFQUFBLEVBQUFyQixVQUFBQyxhQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsR0FBQSxHQUFBc0IsRUFBQWxCLGVBQUFpQixFQUFBLEdBQUFFLEVBQUFELEVBQUEsR0FBQWhCLE9BQUFKLElBQUFxQixHQUFBQSxFQUFBL0IsRUFBQThCLEVBQUEsR0FDUGxDLEdBQUFBLEVBRUEsQ0FDQSxJQUFBMEIsRUFBTUEsRUFBaUNFLE9BQVBOLElBQUFJLEVBQWhDQSxFQUFBQyxPQUFBLFNBQUFOLEdBQUEsT0FBQUEsRUFBQU8sY0FBQU4sS0FFRCxPQUFBTyxJQVBISCxFQUFBQSxFQUFBQyxPQUFBLFNBQUFOLEdBQUEsT0FBQUEsRUFBQVEsY0FBQUEsS0EyQ0k3QixFQUFTa0IsRUFBSVEsUUF4Q2QxQixHQUFNa0IsRUFBQWQsZ0RBWVRKLEdBQzJERCxFQUFBVyxpQkFBQSxXQUFBLElBQUEwQixFQUFBLEVBQUF4QixVQUFBQyxhQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsR0FBQSxHQUFBeUIsRUFBQXJCLGVBQUFvQixFQUFBLEdBQUFFLEVBQUFELEVBQUEsR0FBQW5CLE9BQUFKLElBQUF3QixHQUFBQSxFQUFBbEMsRUFBQWlDLEVBQUEsR0FBQSxHQUFBbkIsRUFBL0JBLENBMEN4QixJQUFNcUIsRUFBZ0JuQyxFQUFTb0MsSUFBSSxTQUFDQyxFQUFHQyxHQUFKLE9BQVV0QyxFQUFTc0MsR0FBR2IsZUF4Q3pEN0IsRUFBQXVDLEVBQUFaLE9BQUEsU0FBQWMsRUFBQUMsR0FBQSxPQUFBSCxFQUFBSSxRQUFBRixJQUFBQyxJQUNEMUMsRUFBTWtCLEVBQUEwQixRQUhrRDVDLEdBQUFrQixFQUFBZCwyQ0FTNURKLEdBRURELEVBQUFXLGlCQUFBLFdBQUEsSUFBQW1DLEVBQUEsRUFBQWpDLFVBQUFDLGFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUFBLEdBQUFrQyxFQUFBOUIsZUFBQTZCLEVBQUEsR0FBQUUsRUFBQUQsRUFBQSxHQUFBNUIsT0FBQUosSUFBQWlDLEdBQUFBLEVBQUEzQyxFQUFBMEMsRUFBQSxHQTZDSSxHQUFLNUIsRUFFRSxDQUVMLElBQU04QixFQUFXNUMsRUFBU29DLElBQUksU0FBQ0MsRUFBR0MsR0FBSixPQUFVdEMsRUFBU3NDLEdBQUdkLGVBN0N4RHFCLEVBQUFELEVBQUFyQixPQUFBLFNBQUFjLEVBQUFDLEdBQUEsT0FBQU0sRUFBQUwsUUFBQUYsSUFBQUMsSUFDQTNDLEVBQVNXLEVBQUFBLFFBeUNMVixHQUFVa0IsRUFBSWQsOENBdkNBQSxHQUNmLE1BQUEsd0JBQU1lLEVBQUFWLGlEQUdIVSxHQUNELE1BQUEsUUFBQUEsRUFBQStCLFdBQUEsc0RBRW1CdkIsR0FBTyxPQUFBUixFQUFLRSxXQUFFUSxRQUFnQkEsU0FBdkIsbURBS2hDVixFQUFBcUIsR0FtRUMsT0FQZSxJQUFJVyxPQUFPQyxLQUFLQyxPQUFPLENBMUR4Q0MsU0FBQW5DLEVBQUFvQyxPQTRESUMsTUFBT3JDLEVBQVdzQyxLQUNsQkMsSUFBSzNELEVBQVM0RCxpQkFBaUJ4QyxHQUMvQnFCLElBQUtBLEVBQ0xvQixVQUFXVCxPQUFPQyxLQUFLUyxVQUFVQyw0Q0E1S2pDL0QsTUFBQUEsaURBa0h5RGdFLG1DQUFBLFNBQUFBLElBQUFDLGdCQUFBQyxLQUFBRixHQUFBRSxLQUFBQywrRkFLcEJDLFVBQVUvRCxlQUFWK0QsVUFBbkNDLGNBQUFDLFNBQUEsa0JBRWlELElBQUFOIiwiZmlsZSI6ImNvbW1vbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29tbW9uIGRhdGFiYXNlIGhlbHBlciBmdW5jdGlvbnMuXHJcbiAqL1xyXG5jbGFzcyBEQkhlbHBlciB7XHJcblxyXG4gIC8qKlxyXG4gICAqIERhdGFiYXNlIFVSTC5cclxuICAgKiBDaGFuZ2UgdGhpcyB0byByZXN0YXVyYW50cy5qc29uIGZpbGUgbG9jYXRpb24gb24geW91ciBzZXJ2ZXIuXHJcbiAgICovXHJcbiAgc3RhdGljIGdldCBEQVRBQkFTRV9VUkwoKSB7XHJcbiAgICBjb25zdCBwb3J0ID0gMTMzNyAvLyBDaGFuZ2UgdGhpcyB0byB5b3VyIHNlcnZlciBwb3J0XHJcbiAgICByZXR1cm4gYGh0dHA6Ly8xOTIuMTY4LjEuMTMyOiR7cG9ydH0vcmVzdGF1cmFudHNgO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRmV0Y2ggYWxsIHJlc3RhdXJhbnRzLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRzKGNhbGxiYWNrKSB7XHJcbiAgICBmZXRjaChEQkhlbHBlci5EQVRBQkFTRV9VUkwpXHJcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgLnRoZW4oZGF0YSA9PiBjYWxsYmFjayhbdHJ1ZSwgZGF0YV0pKVxyXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gY2FsbGJhY2soW2ZhbHNlLCBlcnJvcl0pKTtcclxuXHJcbiAgICAvKlxyXG4gICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgeGhyLm9wZW4oJ0dFVCcsIERCSGVscGVyLkRBVEFCQVNFX1VSTCk7XHJcbiAgICB4aHIub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7IC8vIEdvdCBhIHN1Y2Nlc3MgcmVzcG9uc2UgZnJvbSBzZXJ2ZXIhXHJcbiAgICAgICAgY29uc3QganNvbiA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudHMgPSBqc29uLnJlc3RhdXJhbnRzO1xyXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3RhdXJhbnRzKTtcclxuICAgICAgfSBlbHNlIHsgLy8gT29wcyEuIEdvdCBhbiBlcnJvciBmcm9tIHNlcnZlci5cclxuICAgICAgICBjb25zdCBlcnJvciA9IChgUmVxdWVzdCBmYWlsZWQuIFJldHVybmVkIHN0YXR1cyBvZiAke3hoci5zdGF0dXN9YCk7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgeGhyLnNlbmQoKTtcclxuICAgICovXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGZXRjaCBhIHJlc3RhdXJhbnQgYnkgaXRzIElELlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRCeUlkKGlkLCBjYWxsYmFjaykge1xyXG4gICAgLy8gZmV0Y2ggYWxsIHJlc3RhdXJhbnRzIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nLlxyXG4gICAgREJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50cygoW29rID0gZmFsc2UsIHJlc3BvbnNlXSA9IFtdKSA9PiB7XHJcbiAgICAgIGlmICghb2spIHtcclxuICAgICAgICBjYWxsYmFjayghb2ssIHJlc3BvbnNlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCByZXN0YXVyYW50ID0gcmVzcG9uc2UuZmluZChyID0+IHIuaWQgPT0gaWQpO1xyXG4gICAgICAgIGlmIChyZXN0YXVyYW50KSB7IC8vIEdvdCB0aGUgcmVzdGF1cmFudFxyXG4gICAgICAgICAgY2FsbGJhY2sob2ssIHJlc3RhdXJhbnQpO1xyXG4gICAgICAgIH0gZWxzZSB7IC8vIFJlc3RhdXJhbnQgZG9lcyBub3QgZXhpc3QgaW4gdGhlIGRhdGFiYXNlXHJcbiAgICAgICAgICBjYWxsYmFjayhudWxsLCAnUmVzdGF1cmFudCBkb2VzIG5vdCBleGlzdCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGZXRjaCByZXN0YXVyYW50cyBieSBhIGN1aXNpbmUgdHlwZSB3aXRoIHByb3BlciBlcnJvciBoYW5kbGluZy5cclxuICAgKi9cclxuICBzdGF0aWMgZmV0Y2hSZXN0YXVyYW50QnlDdWlzaW5lKGN1aXNpbmUsIGNhbGxiYWNrKSB7XHJcbiAgICAvLyBGZXRjaCBhbGwgcmVzdGF1cmFudHMgIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nXHJcbiAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRzKChbb2sgPSBmYWxzZSwgcmVzcG9uc2VdID0gW10pID0+IHtcclxuICAgICAgaWYgKCFvaykge1xyXG4gICAgICAgIGNhbGxiYWNrKCFvaywgcmVzcG9uc2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIEZpbHRlciByZXN0YXVyYW50cyB0byBoYXZlIG9ubHkgZ2l2ZW4gY3Vpc2luZSB0eXBlXHJcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHJlc3BvbnNlLmZpbHRlcihyID0+IHIuY3Vpc2luZV90eXBlID09IGN1aXNpbmUpO1xyXG4gICAgICAgIGNhbGxiYWNrKG9rLCByZXN1bHRzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGZXRjaCByZXN0YXVyYW50cyBieSBhIG5laWdoYm9yaG9vZCB3aXRoIHByb3BlciBlcnJvciBoYW5kbGluZy5cclxuICAgKi9cclxuICBzdGF0aWMgZmV0Y2hSZXN0YXVyYW50QnlOZWlnaGJvcmhvb2QobmVpZ2hib3Job29kLCBjYWxsYmFjaykge1xyXG4gICAgLy8gRmV0Y2ggYWxsIHJlc3RhdXJhbnRzXHJcbiAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRzKChbb2sgPSBmYWxzZSwgcmVzcG9uc2VdID0gW10pID0+IHtcclxuICAgICAgaWYgKCFvaykge1xyXG4gICAgICAgIGNhbGxiYWNrKCFvaywgcmVzcG9uc2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIEZpbHRlciByZXN0YXVyYW50cyB0byBoYXZlIG9ubHkgZ2l2ZW4gbmVpZ2hib3Job29kXHJcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHJlc3BvbnNlLmZpbHRlcihyID0+IHIubmVpZ2hib3Job29kID09IG5laWdoYm9yaG9vZCk7XHJcbiAgICAgICAgY2FsbGJhY2sob2ssIHJlc3VsdHMpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZldGNoIHJlc3RhdXJhbnRzIGJ5IGEgY3Vpc2luZSBhbmQgYSBuZWlnaGJvcmhvb2Qgd2l0aCBwcm9wZXIgZXJyb3IgaGFuZGxpbmcuXHJcbiAgICovXHJcbiAgc3RhdGljIGZldGNoUmVzdGF1cmFudEJ5Q3Vpc2luZUFuZE5laWdoYm9yaG9vZChjdWlzaW5lLCBuZWlnaGJvcmhvb2QsIGNhbGxiYWNrKSB7XHJcbiAgICAvLyBGZXRjaCBhbGwgcmVzdGF1cmFudHNcclxuICAgIERCSGVscGVyLmZldGNoUmVzdGF1cmFudHMoKFtvayA9IGZhbHNlLCByZXNwb25zZV0gPSBbXSkgPT4ge1xyXG4gICAgICBpZiAoIW9rKSB7XHJcbiAgICAgICAgY2FsbGJhY2soIW9rLCByZXNwb25zZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGV0IHJlc3VsdHMgPSByZXNwb25zZTtcclxuICAgICAgICBpZiAoY3Vpc2luZSAhPSAnYWxsJykgeyAvLyBmaWx0ZXIgYnkgY3Vpc2luZVxyXG4gICAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMuZmlsdGVyKHIgPT4gci5jdWlzaW5lX3R5cGUgPT0gY3Vpc2luZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZWlnaGJvcmhvb2QgIT0gJ2FsbCcpIHsgLy8gZmlsdGVyIGJ5IG5laWdoYm9yaG9vZFxyXG4gICAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMuZmlsdGVyKHIgPT4gci5uZWlnaGJvcmhvb2QgPT0gbmVpZ2hib3Job29kKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2FsbGJhY2sob2ssIHJlc3VsdHMpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZldGNoIGFsbCBuZWlnaGJvcmhvb2RzIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaE5laWdoYm9yaG9vZHMoY2FsbGJhY2spIHtcclxuICAgIC8vIEZldGNoIGFsbCByZXN0YXVyYW50c1xyXG4gICAgREJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50cygoW29rID0gZmFsc2UsIHJlc3BvbnNlXSA9IFtdKSA9PiB7XHJcbiAgICAgIGlmICghb2spIHtcclxuICAgICAgICBjYWxsYmFjayghb2ssIHJlc3BvbnNlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBHZXQgYWxsIG5laWdoYm9yaG9vZHMgZnJvbSBhbGwgcmVzdGF1cmFudHNcclxuICAgICAgICBjb25zdCBuZWlnaGJvcmhvb2RzID0gcmVzcG9uc2UubWFwKCh2LCBpKSA9PiByZXNwb25zZVtpXS5uZWlnaGJvcmhvb2QpXHJcbiAgICAgICAgLy8gUmVtb3ZlIGR1cGxpY2F0ZXMgZnJvbSBuZWlnaGJvcmhvb2RzXHJcbiAgICAgICAgY29uc3QgdW5pcXVlTmVpZ2hib3Job29kcyA9IG5laWdoYm9yaG9vZHMuZmlsdGVyKCh2LCBpKSA9PiBuZWlnaGJvcmhvb2RzLmluZGV4T2YodikgPT0gaSlcclxuICAgICAgICBjYWxsYmFjayhvaywgdW5pcXVlTmVpZ2hib3Job29kcyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRmV0Y2ggYWxsIGN1aXNpbmVzIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaEN1aXNpbmVzKGNhbGxiYWNrKSB7XHJcbiAgICAvLyBGZXRjaCBhbGwgcmVzdGF1cmFudHNcclxuICAgIERCSGVscGVyLmZldGNoUmVzdGF1cmFudHMoKFtvayA9IGZhbHNlLCByZXNwb25zZV0gPSBbXSkgPT4ge1xyXG4gICAgICBpZiAoIW9rKSB7XHJcbiAgICAgICAgY2FsbGJhY2soIW9rLCByZXNwb25zZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gR2V0IGFsbCBjdWlzaW5lcyBmcm9tIGFsbCByZXN0YXVyYW50c1xyXG4gICAgICAgIGNvbnN0IGN1aXNpbmVzID0gcmVzcG9uc2UubWFwKCh2LCBpKSA9PiByZXNwb25zZVtpXS5jdWlzaW5lX3R5cGUpXHJcbiAgICAgICAgLy8gUmVtb3ZlIGR1cGxpY2F0ZXMgZnJvbSBjdWlzaW5lc1xyXG4gICAgICAgIGNvbnN0IHVuaXF1ZUN1aXNpbmVzID0gY3Vpc2luZXMuZmlsdGVyKCh2LCBpKSA9PiBjdWlzaW5lcy5pbmRleE9mKHYpID09IGkpXHJcbiAgICAgICAgY2FsbGJhY2sob2ssIHVuaXF1ZUN1aXNpbmVzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXN0YXVyYW50IHBhZ2UgVVJMLlxyXG4gICAqL1xyXG4gIHN0YXRpYyB1cmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpIHtcclxuICAgIHJldHVybiAoYC4vcmVzdGF1cmFudC5odG1sP2lkPSR7cmVzdGF1cmFudC5pZH1gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlc3RhdXJhbnQgaW1hZ2UgVVJMLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBpbWFnZVVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCkge1xyXG4gICAgcmV0dXJuIChgL2ltZy8ke3Jlc3RhdXJhbnQucGhvdG9ncmFwaH0uanBnYCk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgaW1hZ2VOYW1lRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KSB7XHJcbiAgICByZXR1cm4gcmVzdGF1cmFudC5waG90b2dyYXBoLnJlcGxhY2UoL1xcLmpwZyQvLCAnJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBNYXAgbWFya2VyIGZvciBhIHJlc3RhdXJhbnQuXHJcbiAgICovXHJcbiAgc3RhdGljIG1hcE1hcmtlckZvclJlc3RhdXJhbnQocmVzdGF1cmFudCwgbWFwKSB7XHJcbiAgICBjb25zdCBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcclxuICAgICAgcG9zaXRpb246IHJlc3RhdXJhbnQubGF0bG5nLFxyXG4gICAgICB0aXRsZTogcmVzdGF1cmFudC5uYW1lLFxyXG4gICAgICB1cmw6IERCSGVscGVyLnVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCksXHJcbiAgICAgIG1hcDogbWFwLFxyXG4gICAgICBhbmltYXRpb246IGdvb2dsZS5tYXBzLkFuaW1hdGlvbi5EUk9QXHJcbiAgICB9KTtcclxuICAgIHJldHVybiBtYXJrZXI7XHJcbiAgfVxyXG5cclxufVxuY2xhc3MgU2VydmljZVdvcmtlckNvbnRyb2xsZXIge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuX3JlZ2lzdGVyU2VydmljZVdvcmtlcigpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogIFJlZ2lzdGVyIHRoZSBTZXJ2aWNlIFdvcmtlclxyXG4gICAqL1xyXG4gIF9yZWdpc3RlclNlcnZpY2VXb3JrZXIoKSB7XHJcbiAgICBpZiAoIW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyKSByZXR1cm47XHJcbiAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3Rlcignc3cuanMnKTtcclxuICB9XHJcbn1cclxuXHJcbm5ldyBTZXJ2aWNlV29ya2VyQ29udHJvbGxlcigpO1xyXG4iXX0=
