"use strict";var _slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,a=!1,i=void 0;try{for(var o,l=e[Symbol.iterator]();!(n=(o=l.next()).done)&&(r.push(o.value),!t||r.length!==t);n=!0);}catch(e){a=!0,i=e}finally{try{!n&&l.return&&l.return()}finally{if(a)throw i}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},getParameterByName=function(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var r=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return r?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null},map=void 0,restaurantId=parseInt(getParameterByName("id")),dbHelper=new DBHelper;self.reviews=[],window.initMap=function(){fetchRestaurantFromURL(function(e,t){e?(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),dbHelper.mapMarkerForRestaurant(self.restaurant,self.map)):console.error(t)})};var fillRestaurantErrorHTML=function(){document.getElementById("restaurant-name").innerHTML="No restaurant found!";var e=document.getElementById("reviews-container");e.parentNode.removeChild(e)},fetchRestaurantFromURL=function(r){!restaurantId||isNaN(restaurantId)?fillRestaurantErrorHTML():(document.getElementById("restaurant_id").value=restaurantId,dbHelper.fetchRestaurantById(restaurantId,function(e,t){if(!e||t){if(!e&&!self.restaurant)return console.error(t),void fillRestaurantErrorHTML();self.restaurant=t,fillRestaurantHTML(),r(!0,t)}}))},fillRestaurantHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant;document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;var t=dbHelper.imageNameForRestaurant(e),r=document.getElementById("restaurant-pic-container");if(null===r.querySelector("picture")){var n=document.createElement("picture"),a=document.createElement("source");a.setAttribute("media","(max-width:750px)"),a.setAttribute("srcset","/img/"+t+"-650.webp 1x, /img/"+t+"-800.webp 2x");var i=document.createElement("source");i.setAttribute("media","(max-width:1200px)"),i.setAttribute("srcset","/img/"+t+"-550.webp 1x, /img/"+t+"-800.webp 2x");var o=document.createElement("img");o.src="/img/"+t+"-800.webp",o.className="restaurant-img",o.id="restaurant-img",o.alt=e.name,n.append(a),n.append(i),n.append(o),r.prepend(n),document.getElementById("map-container").setAttribute("aria-label","Google Maps showing "+e.name+"'s location"),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type+" Restaurant",e.operating_hours&&fillRestaurantHoursHTML(),dbHelper.submitCachedReview(restaurantId),fillReviewsHTML()}},fillRestaurantHoursHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.operating_hours,t=document.getElementById("restaurant-hours");for(var r in e){var n=document.createElement("tr"),a=document.createElement("td");a.innerHTML=r,n.appendChild(a);var i=document.createElement("td");i.innerHTML=e[r],n.appendChild(i),t.appendChild(n)}},fillReviewsHTML=function(){dbHelper.fetchReviewsByRestaurantId(restaurantId,function(e){var t=_slicedToArray(e,2),r=t[0],n=void 0!==r&&r,a=t[1],i=(document.getElementById("reviews-container"),document.getElementById("reviews-list"));if(n&&!a){i.innerHTML="";var o=document.createElement("li");return o.id="no-reviews-yet",o.innerHTML="No reviews yet. Be the first one!",void i.appendChild(o)}!n||a instanceof Error?console.error(a):(a.sort(function(e,t){return e.createdAt-t.createdAt}),i.innerHTML="",a.forEach(function(e){i.appendChild(createReviewHTML(e))}),self.reviews=a)})},createReviewHTML=function(e){var t=document.createElement("li");t.id="review-"+e.id;var r=document.createElement("div");r.className="reviews-author",r.innerHTML=e.name,t.appendChild(r);var n=document.createElement("small");n.className="reviews-date";var a=new Date(e.createdAt);n.innerHTML=a.toLocaleDateString()+" - "+a.toLocaleTimeString(),r.appendChild(n);var i=document.createElement("p");i.innerHTML=e.comments,t.appendChild(i);var o=document.createElement("span");return o.className="reviews-rating",o.title="Rating: "+e.rating,o.setAttribute("aria-label",o.title),o.innerHTML="&#9733;".repeat(parseInt(e.rating))+"&#9734;".repeat(5-parseInt(e.rating)),t.appendChild(o),t},fillBreadcrumb=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.getElementById("breadcrumb");if(null===t.querySelector("#crumb-restaurant-"+e.id)){var r=document.createElement("li");r.id="crumb-restaurant-"+e.id,r.innerHTML=e.name,t.appendChild(r)}};document.getElementById("form-submit-review").addEventListener("submit",function(e){e.preventDefault();var t=(new Date).getTime(),i={createdAt:t,updatedAt:t},r=!0,n=!1,a=void 0;try{for(var o,l=new FormData(this).entries()[Symbol.iterator]();!(r=(o=l.next()).done);r=!0){var d=o.value;i[d[0]]="restaurant_id"==d[0]||"rating"==d[0]?parseInt(d[1]):d[1]}}catch(e){n=!0,a=e}finally{try{!r&&l.return&&l.return()}finally{if(n)throw a}}this.reset(),dbHelper.submitReview(i,function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],t=_slicedToArray(e,2),r=t[0],n=void 0!==r&&r,a=t[1];n||(dbHelper.cacheReviewSubmission(i),console.info("Cached Review",i),console.error(a)),document.getElementById("reviews-list").appendChild(createReviewHTML(i))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
