"use strict";var restaurants=void 0,neighborhoods=void 0,cuisines=void 0,map=void 0,markers=[],dbHelper=new DBHelper,intersectionObservationCallback=function(e,r){e.filter(function(e){return e.isIntersecting}).forEach(function(e){var t=e.target.querySelectorAll("source[data-srcset]"),n=e.target.querySelector("img[data-src]");t.forEach(function(e){e.setAttribute("srcset",e.getAttribute("data-srcset")),e.removeAttribute("data-srcset")}),n.setAttribute("src",n.getAttribute("data-src")),n.removeAttribute("data-src"),r.unobserve(e.target)})},intersectionObserver=new IntersectionObserver(intersectionObservationCallback),fetchNeighborhoods=function(){dbHelper.fetchNeighborhoods(function(e,t){e?(self.neighborhoods=t,fillNeighborhoodsHTML()):console.error(t)})},fillNeighborhoodsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})},fetchCuisines=function(){dbHelper.fetchCuisines(function(e,t){e?(self.cuisines=t,fillCuisinesHTML()):console.error(t)})},fillCuisinesHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})};window.initMap=function(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()};var updateRestaurants=function(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e[e.selectedIndex].value,r=t[t.selectedIndex].value;dbHelper.fetchRestaurantByCuisineAndNeighborhood(n,r,function(e,t){e?(resetRestaurants(t),fillRestaurantsHTML()):console.error(t)})},resetRestaurants=function(e){self.restaurants=[];var t=document.getElementById("restaurants-list");t.querySelectorAll("picture").forEach(function(e){return intersectionObserver.unobserve(e)}),t.innerHTML="",self.markers&&self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.getElementById("restaurants-list");e.forEach(function(e){t.append(createRestaurantHTML(e))}),addMarkersToMap()},createRestaurantHTML=function(e){var t=document.createElement("li"),n=e.photograph||5,r=document.createElement("figure"),a=document.createElement("picture"),s=document.createElement("source");s.setAttribute("media","(max-width:750px)"),s.setAttribute("data-srcset","/img/"+n+"-650.webp 1x, /img/"+n+"-800.webp 2x");var o=document.createElement("source");o.setAttribute("media","(max-width:1200px)"),o.setAttribute("data-srcset","/img/"+n+"-550.webp 1x, /img/"+n+"-800.webp 2x");var i=document.createElement("img");i.setAttribute("data-src","/img/"+n+"-800.webp"),i.className="restaurant-img",i.alt=e.name,a.append(s),a.append(o),a.append(i),r.append(a),intersectionObserver.observe(a);var c=document.createElement("figcaption");c.innerHTML=e.cuisine_type+" Restaurant",r.append(c),t.append(r);var u=document.createElement("div");u.className="restaurant-info";var d=document.createElement("h3");d.innerHTML=e.name,u.append(d);var l=document.createElement("p");l.innerHTML=e.neighborhood,u.append(l);var m=document.createElement("p");m.innerHTML=e.address,u.append(m);var p=document.createElement("a");return p.innerHTML="View Details about "+e.name,p.href=dbHelper.urlForRestaurant(e),u.append(p),t.append(u),t},addMarkersToMap=function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=dbHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",function(){window.location.href=t.url}),self.markers.push(t)})};document.addEventListener("DOMContentLoaded",function(e){fetchNeighborhoods(),fetchCuisines()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
